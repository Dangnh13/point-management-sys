<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.htkk.persistence.dao.generator.TransactionPointMapper">
  <resultMap id="BaseResultMap" type="jp.co.htkk.entity.generator.TransactionPoint">
    <id column="transaction_point_id" jdbcType="BIGINT" property="transactionPointId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="transaction_type" jdbcType="SMALLINT" property="transactionType" />
    <result column="amount_point" jdbcType="INTEGER" property="amountPoint" />
    <result column="transaction_status" jdbcType="SMALLINT" property="transactionStatus" />
    <result column="transaction_time" jdbcType="TIMESTAMP" property="transactionTime" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="system_os" jdbcType="VARCHAR" property="systemOs" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="BIGINT" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="del_flag" jdbcType="SMALLINT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transaction_point_id, user_id, transaction_type, amount_point, transaction_status, 
    transaction_time, device_id, system_os, created_by, created_at, updated_by, updated_at, 
    del_flag
  </sql>
  <select id="selectByExample" parameterType="jp.co.htkk.entity.generator.TransactionPointCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction_point
    where transaction_point_id = #{transactionPointId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from transaction_point
    where transaction_point_id = #{transactionPointId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.htkk.entity.generator.TransactionPointCriteria">
    delete from transaction_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.htkk.entity.generator.TransactionPoint">
    <selectKey keyProperty="transactionPointId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into transaction_point (user_id, transaction_type, amount_point, 
      transaction_status, transaction_time, 
      device_id, system_os, created_by, 
      created_at, updated_by, updated_at, 
      del_flag)
    values (#{userId,jdbcType=BIGINT}, #{transactionType,jdbcType=SMALLINT}, #{amountPoint,jdbcType=INTEGER}, 
      #{transactionStatus,jdbcType=SMALLINT}, #{transactionTime,jdbcType=TIMESTAMP}, 
      #{deviceId,jdbcType=VARCHAR}, #{systemOs,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=BIGINT}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="jp.co.htkk.entity.generator.TransactionPoint">
    <selectKey keyProperty="transactionPointId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into transaction_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="transactionType != null">
        transaction_type,
      </if>
      <if test="amountPoint != null">
        amount_point,
      </if>
      <if test="transactionStatus != null">
        transaction_status,
      </if>
      <if test="transactionTime != null">
        transaction_time,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="systemOs != null">
        system_os,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="transactionType != null">
        #{transactionType,jdbcType=SMALLINT},
      </if>
      <if test="amountPoint != null">
        #{amountPoint,jdbcType=INTEGER},
      </if>
      <if test="transactionStatus != null">
        #{transactionStatus,jdbcType=SMALLINT},
      </if>
      <if test="transactionTime != null">
        #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="systemOs != null">
        #{systemOs,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.htkk.entity.generator.TransactionPointCriteria" resultType="java.lang.Long">
    select count(*) from transaction_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transaction_point
    <set>
      <if test="record.transactionPointId != null">
        transaction_point_id = #{record.transactionPointId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.transactionType != null">
        transaction_type = #{record.transactionType,jdbcType=SMALLINT},
      </if>
      <if test="record.amountPoint != null">
        amount_point = #{record.amountPoint,jdbcType=INTEGER},
      </if>
      <if test="record.transactionStatus != null">
        transaction_status = #{record.transactionStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.transactionTime != null">
        transaction_time = #{record.transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.systemOs != null">
        system_os = #{record.systemOs,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=BIGINT},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transaction_point
    set transaction_point_id = #{record.transactionPointId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      transaction_type = #{record.transactionType,jdbcType=SMALLINT},
      amount_point = #{record.amountPoint,jdbcType=INTEGER},
      transaction_status = #{record.transactionStatus,jdbcType=SMALLINT},
      transaction_time = #{record.transactionTime,jdbcType=TIMESTAMP},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      system_os = #{record.systemOs,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=BIGINT},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.htkk.entity.generator.TransactionPoint">
    update transaction_point
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="transactionType != null">
        transaction_type = #{transactionType,jdbcType=SMALLINT},
      </if>
      <if test="amountPoint != null">
        amount_point = #{amountPoint,jdbcType=INTEGER},
      </if>
      <if test="transactionStatus != null">
        transaction_status = #{transactionStatus,jdbcType=SMALLINT},
      </if>
      <if test="transactionTime != null">
        transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="systemOs != null">
        system_os = #{systemOs,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=SMALLINT},
      </if>
    </set>
    where transaction_point_id = #{transactionPointId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.htkk.entity.generator.TransactionPoint">
    update transaction_point
    set user_id = #{userId,jdbcType=BIGINT},
      transaction_type = #{transactionType,jdbcType=SMALLINT},
      amount_point = #{amountPoint,jdbcType=INTEGER},
      transaction_status = #{transactionStatus,jdbcType=SMALLINT},
      transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      device_id = #{deviceId,jdbcType=VARCHAR},
      system_os = #{systemOs,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=BIGINT},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=SMALLINT}
    where transaction_point_id = #{transactionPointId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="jp.co.htkk.entity.generator.TransactionPointCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectOneByExample" parameterType="jp.co.htkk.entity.generator.TransactionPointCriteria" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="transaction_point_id" keyProperty="transactionPointId" parameterType="map" useGeneratedKeys="true">
    insert into transaction_point
    (user_id, transaction_type, amount_point, transaction_status, transaction_time, device_id, 
      system_os, created_by, created_at, updated_by, updated_at, del_flag)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.transactionType,jdbcType=SMALLINT}, #{item.amountPoint,jdbcType=INTEGER}, 
        #{item.transactionStatus,jdbcType=SMALLINT}, #{item.transactionTime,jdbcType=TIMESTAMP}, 
        #{item.deviceId,jdbcType=VARCHAR}, #{item.systemOs,jdbcType=VARCHAR}, #{item.createdBy,jdbcType=BIGINT}, 
        #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=BIGINT}, #{item.updatedAt,jdbcType=TIMESTAMP}, 
        #{item.delFlag,jdbcType=SMALLINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="transaction_point_id" keyProperty="list.transactionPointId" parameterType="map" useGeneratedKeys="true">
    insert into transaction_point (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'user_id'.toString() == column.value">
          #{item.userId,jdbcType=BIGINT}
        </if>
        <if test="'transaction_type'.toString() == column.value">
          #{item.transactionType,jdbcType=SMALLINT}
        </if>
        <if test="'amount_point'.toString() == column.value">
          #{item.amountPoint,jdbcType=INTEGER}
        </if>
        <if test="'transaction_status'.toString() == column.value">
          #{item.transactionStatus,jdbcType=SMALLINT}
        </if>
        <if test="'transaction_time'.toString() == column.value">
          #{item.transactionTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'device_id'.toString() == column.value">
          #{item.deviceId,jdbcType=VARCHAR}
        </if>
        <if test="'system_os'.toString() == column.value">
          #{item.systemOs,jdbcType=VARCHAR}
        </if>
        <if test="'created_by'.toString() == column.value">
          #{item.createdBy,jdbcType=BIGINT}
        </if>
        <if test="'created_at'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'updated_by'.toString() == column.value">
          #{item.updatedBy,jdbcType=BIGINT}
        </if>
        <if test="'updated_at'.toString() == column.value">
          #{item.updatedAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=SMALLINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" keyColumn="transaction_point_id" keyProperty="transactionPointId" parameterType="jp.co.htkk.entity.generator.TransactionPoint" useGeneratedKeys="true">
    insert into transaction_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionPointId != null">
        transaction_point_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="transactionType != null">
        transaction_type,
      </if>
      <if test="amountPoint != null">
        amount_point,
      </if>
      <if test="transactionStatus != null">
        transaction_status,
      </if>
      <if test="transactionTime != null">
        transaction_time,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="systemOs != null">
        system_os,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionPointId != null">
        #{transactionPointId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="transactionType != null">
        #{transactionType,jdbcType=SMALLINT},
      </if>
      <if test="amountPoint != null">
        #{amountPoint,jdbcType=INTEGER},
      </if>
      <if test="transactionStatus != null">
        #{transactionStatus,jdbcType=SMALLINT},
      </if>
      <if test="transactionTime != null">
        #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="systemOs != null">
        #{systemOs,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=SMALLINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="transactionPointId != null">
        transaction_point_id = #{transactionPointId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="transactionType != null">
        transaction_type = #{transactionType,jdbcType=SMALLINT},
      </if>
      <if test="amountPoint != null">
        amount_point = #{amountPoint,jdbcType=INTEGER},
      </if>
      <if test="transactionStatus != null">
        transaction_status = #{transactionStatus,jdbcType=SMALLINT},
      </if>
      <if test="transactionTime != null">
        transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="systemOs != null">
        system_os = #{systemOs,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <insert id="upsert" keyColumn="transaction_point_id" keyProperty="transactionPointId" parameterType="jp.co.htkk.entity.generator.TransactionPoint" useGeneratedKeys="true">
    insert into transaction_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionPointId != null">
        transaction_point_id,
      </if>
      user_id,
      transaction_type,
      amount_point,
      transaction_status,
      transaction_time,
      device_id,
      system_os,
      created_by,
      created_at,
      updated_by,
      updated_at,
      del_flag,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionPointId != null">
        #{transactionPointId,jdbcType=BIGINT},
      </if>
      #{userId,jdbcType=BIGINT},
      #{transactionType,jdbcType=SMALLINT},
      #{amountPoint,jdbcType=INTEGER},
      #{transactionStatus,jdbcType=SMALLINT},
      #{transactionTime,jdbcType=TIMESTAMP},
      #{deviceId,jdbcType=VARCHAR},
      #{systemOs,jdbcType=VARCHAR},
      #{createdBy,jdbcType=BIGINT},
      #{createdAt,jdbcType=TIMESTAMP},
      #{updatedBy,jdbcType=BIGINT},
      #{updatedAt,jdbcType=TIMESTAMP},
      #{delFlag,jdbcType=SMALLINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="transactionPointId != null">
        transaction_point_id = #{transactionPointId,jdbcType=BIGINT},
      </if>
      user_id = #{userId,jdbcType=BIGINT},
      transaction_type = #{transactionType,jdbcType=SMALLINT},
      amount_point = #{amountPoint,jdbcType=INTEGER},
      transaction_status = #{transactionStatus,jdbcType=SMALLINT},
      transaction_time = #{transactionTime,jdbcType=TIMESTAMP},
      device_id = #{deviceId,jdbcType=VARCHAR},
      system_os = #{systemOs,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=BIGINT},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=SMALLINT},
    </trim>
  </insert>
</mapper>